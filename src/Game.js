// src/Game.js
import Board from './Board.js';

export default class Game {
  constructor({
    rows = 4,
    cols = 4,
    imgSrc,
    imgAlt = '–ì–æ–±–ª–∏–Ω',
    interval = 1000,                 // –ø–µ—Ä–∏–æ–¥ –ø–æ—è–≤–ª–µ–Ω–∏—è –≥–æ–±–ª–∏–Ω–∞ (–º—Å)
    rng = Math.random,               // –¥–ª—è –±—É–¥—É—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
    winHits = 10,                    // –ø–∞—Ä–∞–º–µ—Ç—Ä –ø–æ–±–µ–¥—ã –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π –∏–≥—Ä—ã
    maxMisses = 5,                   // –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ N –ø—Ä–æ–º–∞—Ö–æ–≤
    mount = document.getElementById('game-root') || document.body,
  } = {}) {
    this.intervalMs = interval;
    this.rng = rng;

    this.board = new Board({ mount, rows, cols, imgSrc, imgAlt });

    // —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    this.currentIndex = -1;
    this.roundActive = false;        // –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Ç–µ–∫—É—â–∏–π "—à–∞–Ω—Å" –ø–æ–ø–∞—Å—Ç—å
    this.isOver = false;             // –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã
    this.timerId = null;             // —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è –≥–æ–±–ª–∏–Ω–∞

    // —Å—á—ë—Ç
    this.hits = 0;
    this.misses = 0;
    this.winHits = winHits;
    this.maxMisses = maxMisses;

    // HUD
    this.hitsEl = document.getElementById('hits');
    this.missesEl = document.getElementById('misses');

    // –º–æ–¥–∞–ª–∫–∞
    this.modal = document.getElementById('modal');
    this.modalTitle = document.getElementById('modal-title');
    this.modalText = document.getElementById('modal-text');
    this.modalBtn = document.getElementById('modal-btn');

    // –±–∏–Ω–¥—ã
    this.onBoardClick = this.onBoardClick.bind(this);
    this.onModalBtn = this.onModalBtn.bind(this);
  }

  // –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ DOM
  init() {
    this.board.setup();
    this.board.boardEl.addEventListener('click', this.onBoardClick); // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–æ—Å–∫–∏
    this.modalBtn?.addEventListener('click', this.onModalBtn); // –º–æ–¥–∞–ª–∫–∏
    this.updateHud();
  }

  // —Ç–æ–ª—å–∫–æ –æ—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–µ—Ä–∞ (–Ω–µ —Ç—Ä–æ–≥–∞–µ—Ç —Ñ–ª–∞–≥–∏ —Ä–∞—É–Ω–¥–∞)
  cancelTimer() {
    if (this.timerId) {
      clearTimeout(this.timerId);
      this.timerId = null;
    }
  }

  // –ø–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–≥—Ä—ã (—Ç–∞–π–º–µ—Ä + –∑–∞–∫—Ä—ã—Ç—å —Ä–∞—É–Ω–¥)
  stop() {
    this.cancelTimer();
    this.roundActive = false;
  }

  // –∑–∞–ø—É—Å–∫ –∏–≥—Ä–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞
  start() {
    if (!this.board.boardEl) this.init();
    if (this.timerId) return;

    this.isOver = false;
    this.scheduleNextSpawn(0); // –ø–µ—Ä–≤–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ –≥–æ–±–ª–∏–Ω–∞
  }


  scheduleNextSpawn(delayMs = this.intervalMs) {
    this.cancelTimer(); // –Ω–µ –∫–æ–ø–∏–º —Ç–∞–π–º–µ—Ä—ã

    this.timerId = setTimeout(() => {
      if (this.isOver) return;   // –∏–≥—Ä–∞ —É–∂–µ –∑–∞–∫–æ–Ω—á–µ–Ω–∞ ‚Äî –≤—ã—Ö–æ–¥–∏–º
      this.spawn();              // –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–æ–±–ª–∏–Ω–∞
      this.scheduleNextSpawn();  // –ø–ª–∞–Ω–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç–∏–∫ —Å –æ–±—ã—á–Ω—ã–º –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
    }, delayMs);
  }

  // –ø–æ–∫–∞–∑–∞—Ç—å –≥–æ–±–ª–∏–Ω–∞ (–µ—Å–ª–∏ –ø—Ä–æ—à–ª—ã–π —Ä–∞—É–Ω–¥ –Ω–µ –∑–∞–∫—Ä—ã—Ç - —ç—Ç–æ –ø—Ä–æ–º–∞—Ö)
  spawn() {
    if (this.isOver) return;

    if (this.roundActive) {
      this.misses += 1;               // –∏–≥—Ä–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∫–ª–∏–∫–Ω—É—Ç—å
      this.updateHud();
      if (this.checkLose()) return;
    }

    const idx = this.nextIndex();
    this.board.showAt(idx);
    this.currentIndex = idx;
    this.roundActive = true;
  }

  // –≤—ã–±–æ—Ä —Å–ª–µ–¥—É—é—â–µ–≥–æ –∏–Ω–¥–µ–∫—Å–∞
  nextIndex() {
    const max = this.board.cellCount();
    if (max <= 1) return 0;

    if (this.currentIndex < 0) {
      return Math.floor(this.rng() * max);
    }
    const shift = Math.floor(this.rng() * (max - 1)) + 1;
    return (this.currentIndex + shift) % max;
  }

  // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–∫–æ–≤ –ø–æ –ø–æ–ª—é
  onBoardClick(e) {
    if (this.isOver) return;

    const cell = this.board.cellFromEvent(e);
    if (!cell) return;

    const img = this.board.goblinEl;
    const isHit = img && img.parentElement === cell;

    if (isHit && this.roundActive) {
      // 1) –ø–æ–ø–∞–¥–∞–Ω–∏–µ
      this.hits += 1;
      this.roundActive = false;

      // 2) —É–±—Ä–∞—Ç—å –≥–æ–±–ª–∏–Ω–∞ –∏ –æ–±–Ω–æ–≤–∏—Ç—å HUD
      this.board.removeGoblin();
      this.updateHud();

      // 3) –ø–æ–±–µ–¥–∞
      if (this.checkWin()) return;

      // 4) –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–∞–π–º–∏–Ω–≥–∞ –æ—Ç ¬´—Å–µ–π—á–∞—Å¬ª: –Ω–æ–≤—ã–π —Ä–∏—Ç–º + –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–æ–∫–∞–∑
      this.scheduleNextSpawn(0);

    } else {
        // –∫–ª–∏–∫ –ø–æ –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–µ ‚Äî –ø—Ä–æ–º–∞—Ö
        this.misses += 1;
        this.updateHud();
        this.checkLose();
      }
  }

  // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–æ
  updateHud() {
    if (this.hitsEl)   this.hitsEl.textContent = String(this.hits);
    if (this.missesEl) this.missesEl.textContent = String(this.misses);
  }

  // —É—Å–ª–æ–≤–∏—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
  checkWin() {
    if (this.hits >= this.winHits) {
      this.endGame(true);
      return true;
    }
    return false;
  }

  checkLose() {
    if (this.misses >= this.maxMisses) {
      this.endGame(false);
      return true;
    }
    return false;
  }

  endGame(isWin) {
    this.isOver = true;
    this.stop();                      // –ø–æ–≥–∞—Å–∏—Ç—å —Ç–∞–π–º–µ—Ä –∏ –∑–∞–∫—Ä—ã—Ç—å —Ä–∞—É–Ω–¥
    this.board.removeGoblin();

    const title = isWin ? '–¢—ã —Å–ø–∞—Å —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ! üéâ' : '–ì–æ–±–ª–∏–Ω—ã –≤—ã—Ä–≤–∞–ª–∏—Å—å –Ω–∞ —Å–≤–æ–±–æ–¥—É –∏ –Ω–∞—Å—Ç—É–ø–∏–ª–∞ —ç—Ä–∞ –ø–æ—Ä–∞–±–æ—â–µ–Ω–∏—è üò¢';
    const text  = `–ò—Ç–æ–≥: –ø–æ–ø–∞–¥–∞–Ω–∏–π - ${this.hits}, –ø—Ä–æ–º–∞—Ö–æ–≤ - ${this.misses}.`;
    this.openModal(title, text);
  }

  openModal(title, text) {
    if (!this.modal) return;
    this.modalTitle.textContent = title;
    this.modalText.textContent = text;
    this.modal.classList.remove('hidden');
  }
  // –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤ –º–æ–¥–∞–ª–∫–µ
  onModalBtn() {
    this.modal.classList.add('hidden');
    this.hits = 0;
    this.misses = 0;
    this.currentIndex = -1;
    this.roundActive = false;
    this.isOver = false;
    this.updateHud();
    this.scheduleNextSpawn(0);
  }

  // –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ HMR/—É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–∏
  destroy() {
    this.stop();
    if (this.board?.boardEl) {
      this.board.boardEl.removeEventListener('click', this.onBoardClick);
    }
    if (this.modalBtn) {
      this.modalBtn.removeEventListener('click', this.onModalBtn);
    }
    this.board?.removeGoblin?.();
  }
}